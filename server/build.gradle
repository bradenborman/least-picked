plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.borman'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	runtime("com.h2database:h2:1.3.176")


	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task copyClient(dependsOn: ":client:clientBuild") {

	doFirst{
		delete "src/main/resources/static"
		delete "src/main/resources/templates"
	}

	doLast {
		copy {
			from new File(project(":client").getProjectDir(), "build")
			into "${buildDir}/resources/main/static"
		}
		copy {
			from new File(project(":client").getProjectDir(), "build/index.html")
			into "${buildDir}/resources/main/templates"
		}
		copy {
			from new File(project(":client").getProjectDir(), "build/error.html")
			into "${buildDir}/resources/templates"
		}
		copy {
			from new File(project(":client").getProjectDir(), "build")
			into "src/main/resources/static"
		}
		copy {
			from new File(project(":client").getProjectDir(), "build/index.html")
			into "src/main/resources/templates"
		}
		copy {
			from new File(project(":client").getProjectDir(), "build/error.html")
			into "src/main/resources/templates"
		}
	}
}

task finalizeBuild(type: Copy, dependsOn: build) {
	from "${buildDir}/libs/server-${version}.war"
	into "${buildDir}/libs"
	rename "server-${version}.war", "least-picked.war"
}

bootWar.dependsOn(copyClient)
clean.dependsOn(":client:clientClean")
build.finalizedBy(finalizeBuild)

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean